version: "3.7"

services:
  # project-folder:
  #   build: ../
  auth:
    build: ./auth
    env_file:
      - .env
    # ports:
    #   - "3333:3333"
    # networks:
    #   - caddy
    labels:
      caddy: inclubit2.testyta.se
      caddy.handle_path: /auth*
      caddy.handle_path.reverse_proxy: "{{upstreams 3333}}"
  db:
    image: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=bajskorv
      - POSTGRES_DB=inclubit
    ports:
      - "5432:5432"
  # hello-world:
  #   image: crccheck/hello-world
  #   # ports:
  #     # - "1337:8000"
  #   # networks:
  #   #   - caddy
  #   # labels:
  #   #   caddy: inclubit2.testyta.se
  #   #   caddy.handle_path: /hello*
  #   #   # caddy.handle_path.reverse_proxy: "hello-world:8000"
  #   #   caddy.handle_path.reverse_proxy: "host.docker.internal:8000"
  #   network_mode: "host"
  # whoami:
  #   image: jwilder/whoami
  #   networks:
  #     - caddy
  #   labels:
  #     caddy: inclubit2.testyta.se
  #     caddy.reverse_proxy: "{{upstreams 8000}}"

  # caddy:
  #   image: caddy:2.4.5
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #     # - "3000:3000"
  #     # - "1-65535:1-65535"
  #   volumes:
  #     - ./caddy/Caddyfile:/etc/caddy/Caddyfile
  #     - ./docker-data/caddy:/data
  # whoami:
  #   image: jwilder/whoami
  #   ports:
  #     - "8000:8000"
  #   labels:
  #     caddy: inclubit2.testyta.se
  #     caddy.handle_path: /who/*
  #     caddy.handle_path.0_reverse_proxy: "{{upstreams 8000}}"
  # caddy:
  #   image: lucaslorentz/caddy-docker-proxy
  #   ports:
  #     # - 8181:80
  #     - 80:80
  #     - 433:433
  #   # labels:
  #   #   caddy: inclubit2.testyta.se
  #   #   caddy.respond: / `hello WOOORLD` 200
  #     # caddy.reverse_proxy: "host.docker.internal:8000"
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   volumes:
  #     - ./docker-data/caddy:/data
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   restart: unless-stopped
networks:
  default:
    external: true
    name: caddy
  # mediaserver:
  #   build: ./mediaserver
  #   network_mode: "host"
  # adminer:
  #   image: adminer
  #   restart: always
  #   ports:
  #     - "8989:8080"
