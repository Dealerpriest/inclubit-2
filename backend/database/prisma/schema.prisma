// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model Profile {
  id     Int    @id @default(autoincrement())
  // uuid   String @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user   User   @relation(fields: [userId], references: [uuid])
  userId String @unique @db.Uuid
}

model Gathering {
  uuid  String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name  String @unique
  users User[]
  rooms Room[]
}

model Room {
  uuid        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String
  gathering   Gathering @relation(fields: [gatheringId], references: [uuid])
  gatheringId String    @db.Uuid
  users       User[]

  @@unique([name, gatheringId])
}

model Role {
  id    Int    @id @default(autoincrement())
  // uuid String @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  role  String @unique
  users User[]
}

model User {
  uuid        String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  updatedAt   DateTime   @updatedAt
  username    String     @unique
  password    String
  role        Role?      @relation(fields: [roleId], references: [id])
  roleId      Int?
  profile     Profile?
  gathering   Gathering? @relation(fields: [gatheringId], references: [uuid])
  gatheringId String?    @db.Uuid
  rooms       Room[]
}
